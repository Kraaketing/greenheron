<script>
// Parallax scroll effect
function handleScroll() {
  const parallaxContainer = document.getElementById('parallax-mountains');
  if (!parallaxContainer) return;
  
  const containerRect = parallaxContainer.getBoundingClientRect();
  const containerTop = containerRect.top;
  const containerBottom = containerRect.bottom;
  const windowHeight = window.innerHeight;
  
  if (containerBottom >= 0 && containerTop <= windowHeight) {
    const scrollProgress = Math.max(0, windowHeight - containerTop) / (windowHeight + containerRect.height);
    const layers = parallaxContainer.querySelectorAll('.mountain-layer');
    
    // Scale effect based on viewport width
    const viewportWidth = window.innerWidth;
    const baseMultiplier = 200;
    const widthMultiplier = Math.max(1, viewportWidth / 1200);
    
    layers.forEach(layer => {
      const speed = parseFloat(layer.dataset.speed);
      const translateY = scrollProgress * speed * baseMultiplier * widthMultiplier;
      layer.style.transform = `translateY(${translateY}px)`;
    });
  }
}

let ticking = false;
function requestTick() {
  if (!ticking) {
    requestAnimationFrame(handleScroll);
    ticking = true;
  }
}

// Listen for scroll events
window.addEventListener('scroll', () => {
  ticking = false;
  requestTick();
});

// Listen for details toggle events
document.querySelectorAll('details').forEach(details => {
  details.addEventListener('toggle', () => {
    ticking = false;
    requestTick();
  });
});

// Initial call
handleScroll();
</script>